version: "3.4"

services:
  db:
    image: mysql:8.0.34
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
    volumes:
      - mysql-data:/var/lib/mysql
    command: --default-authentication-plugin=caching_sha2_password
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "${DB_USER}",
          "-p${DB_PASS}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:latest"
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  flask-app:
    build:
      context: .
    ports:
      - "${FLASK_APP_PORT}:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app/static:/app/static

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - flask-app
    environment:
      - CERT_EXISTS=${CERT_EXISTS}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot
      - ./app/static:/app/static
      - ./nginx/nginx_init.conf:/etc/nginx/conf.d/nginx_init.conf
      - ./nginx/nginx_ssl.conf:/etc/nginx/conf.d/nginx_ssl.conf

  certbot:
    image: certbot/certbot
    depends_on:
      - nginx
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email diamondpawsholding@gmail.com --agree-tos --no-eff-email --force-renewal -d zerodaypoke.com -d www.zerodaypoke.com

  node-app:
    build:
      context: ./src
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis

volumes:
  mysql-data:
